@using System.Security.Claims
@model movie_portal.Models.Media.MediaDTO
@{
    ViewData["Title"] = Model.Title;

    var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
    var genresListHtml = Model.Genres.Select(p => $"<a href=\"~/Media/?genre={p.Value}\">{p.Text}</a>").ToList();
    var genresRawHtml = string.Join(", ", genresListHtml);
}
<div class="container">

    <div>
        <h2>@Model.Title (@Model.ReleaseYear)</h2>
        <br>
        @if(Model.UpdateDateTime!=null)
        {
        <span class="text-muted font-weight-lighter">Дата обновления: @(Model.UpdateDateTime.Value.ToString("dd-MM-yyyy, HH:mm"))</span>
        }
    </div>
    <div class="media">
        <img src="~/images/@Model.ImageFileName" style="width: 20rem; height: 30rem;" class="mr-3"
            alt="@Model.ImageFileName" />
        <div class="media-body">
            <p><b>Название:</b> @Model.Title</p>
            <p><b>Год:</b> @(Model.ReleaseYear)</p>
            <p><b>Режисер:</b> @Model.Director</p>
            <p><b>Жанр:</b> @(Html.Raw(genresRawHtml))</p>
        </div>
    </div>
    <div class="pt-2">
        <p><b>Описание:</b> @(Model.Description)</p>
    </div>
    @if(Model.MediaFilesName.Any())
    {
    <div class="mb-1">
        <details>
            <summary>Ссылки на скачивание</summary>
            @foreach (var file in Model.MediaFilesName)
            {
                <a href="~/media/@(file)" class="link pl-2" target="_blank" rel="noopener external noreferrer">@(file.Substring(0,file.LastIndexOf('_')))</a><br>
            }
        </details>
    </div>
    <div class="mb-5">
        <details>
            <summary>Плейер</summary>
                <select id="file-select" class="selectpicker">
                @foreach(var file in Model.MediaFilesName)
                {
                    <option value="/media/@file">@(file.Substring(0,file.LastIndexOf('_')))</option>
                    @* <button class="btn btn-outline-primary" data-url="~/media/@file">@(file.Substring(0,file.LastIndexOf('_')))</button> *@
                }
                </select>
                <video id="player" hidden class="player"></video>
        </details>
    </div>
    }

    <div class="mb-3">
        <span class="text-muted font-weight-lighter">Дата публикации: @(Model.InsertDateTime.ToString("dd-MM-yyyy, HH:mm"))</span>
        <br>
        <span class="text-muted font-weight-lighter">Просмотров: @(Model.Views)</span>
    </div>

    <div>
        <div>
            @if (User.Identity.IsAuthenticated)
            {
                <form>
                    <input type="hidden" id="movie-id" value="@(Model.Id.ToString())">
                    <input type="hidden" id="user-id" value="@userId">
                    <div class="form-group">
                        <textarea type="text" id="content"
                        class="col-12 col-sm-12 col-md-10 col-lg-8 form-control"></textarea>
                    </div>
                    <div class="form-group">
                        <div>
                            <button id="comment-send-btn" class="btn btn-success">Отправить комментарий</button>
                        </div>
                    </div>
                </form>
            }
            else
            {
                <p>Чтобы оставить комментарий войдите в аккаунт</p>
            }
        </div>

        <span>Комментарии (@(Model.Comments.Count))</span>
        @foreach (var comm in Model.Comments.Where(c=>c.IsDeleted==false))
        {
            <div class="card mb-3" style="font-size: 0.9rem;">
                <div class="card-header">
                    <b class="">@(comm.User.UserName)</b><br>
                    <span class="text-muted small font-weight-lighter">@(comm.UploadDate.ToString("dd-MMM-yyyy HH:mm"))</span>

                </div>
                <div class="card-body">
                    @(comm.Content)
                </div>
                <div class="card-footer">
                    @if(comm.UserId==userId)
                    {
                    <button data-comment-id="@(comm.Id)" class="btn btn-danger delete-btn">Удалить комментарий</button>
                    }
                </div>
            </div>
        }
    </div>

    @section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/lib/plyr/plyr.js"></script>
    <link rel="stylesheet" href="~/lib/plyr/plyr.css" />
    <script>
        $(document).ready(() => {
            $('select').select();
            /*const players = Array.from(document.querySelectorAll('.js-player')).map(p => new Plyr(p,{ 
                controls: [
                    'play-large', // The large play button in the center
                    'restart', // Restart playback
                    'rewind', // Rewind by the seek time (default 10 seconds)
                    'play', // Play/pause playback
                    'fast-forward', // Fast forward by the seek time (default 10 seconds)
                    'progress', // The progress bar and scrubber for playback and buffering
                    'current-time', // The current time of playback
                    'duration', // The full duration of the media
                    'mute', // Toggle mute
                    'volume', // Volume control
                    'settings', // Settings menu
                    'pip', // Picture-in-picture (currently Safari only)
                    'airplay', // Airplay (currently Safari only)
                    'download', // Show a download button with a link to either the current source or a custom URL you specify in your options
                    'fullscreen',],
                settings: ['speed', 'loop'],
                blankVideo: p.dataset.url,
                clickToPlay:true,

            }));*/

            document.querySelector('#file-select').onchange = (evt) =>{
                console.log(evt.target.value);
                const player= document.getElementById('player')
                player.hidden = false;
                player.src = location.origin+ evt.target.value;
                const plyr = new Plyr(player,{ 
                controls: [
                    'play-large', // The large play button in the center
                    'restart', // Restart playback
                    'rewind', // Rewind by the seek time (default 10 seconds)
                    'play', // Play/pause playback
                    'fast-forward', // Fast forward by the seek time (default 10 seconds)
                    'progress', // The progress bar and scrubber for playback and buffering
                    'current-time', // The current time of playback
                    'duration', // The full duration of the media
                    'mute', // Toggle mute
                    'volume', // Volume control
                    'settings', // Settings menu
                    'pip', // Picture-in-picture (currently Safari only)
                    'airplay', // Airplay (currently Safari only)
                    'download', // Show a download button with a link to either the current source or a custom URL you specify in your options
                    'fullscreen',],
                settings: ['speed', 'loop'],
                @* blankVideo: p.dataset.url, *@
                clickToPlay:true,
            });

            }

            document.querySelectorAll('.delete-btn').forEach(el=>{
                const commId =  el.dataset.commentId;
                const userId = '@(userId)';
                el.onclick = ()=>{
                    $.ajax({
                    url: '/Media/DeleteComment/',
                    data: { commentId: commId },
                    success: (result) => {
                        if (!result) {
                            return;
                        }

                        location.reload();
                    },
                }).fail((error) => {
                    console.error(error);
                });
                }
            })

            document.getElementById('comment-send-btn').onclick = (evt) => {
                evt.preventDefault();
                const movieId = `${document.getElementById("movie-id").value}`;
                const userId = `${document.getElementById("user-id").value}`;
                const content = `${document.getElementById("content").value}`;
                if(!content.trim()){
                    document.getElementById("content").focus();
                    return;
                }

                $.ajax({
                    url: '/Media/AddComment/',
                    data: { id: movieId, content: content },
                    success: (result) => {
                        if (!result) {
                            return;
                        }

                        location.reload();
                    },
                }).fail((error) => {
                    console.error(error);
                });
            }
        })
    </script>
    }
</div>